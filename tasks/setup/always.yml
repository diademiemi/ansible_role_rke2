---
- name: "Setup | Generate token if none was given"
  ansible.builtin.set_fact:
    rancher_rke2_server_token: "{{ lookup('password', '/dev/null length=64 chars=ascii_letters,digits') }}"
  delegate_to: localhost
  run_once: true
  when: rancher_rke2_server_token is not defined

- name: "Setup | Ensure RKE2 config directory exists"
  become: true
  ansible.builtin.file:
    path: "/etc/rancher/rke2"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: "Setup | Template RKE2 config"
  become: true
  ansible.builtin.template:
    src: "config.yaml.j2"
    dest: "/etc/rancher/rke2/config.yaml"
    owner: root
    group: root
    mode: '0644'

- name: "Setup | Download RKE2 install script"
  become: true
  ansible.builtin.get_url:
    url: "{{ rancher_rke2_script_url }}"
    dest: "/tmp/rke2-install.sh"
    owner: root
    group: root
    mode: '0755'

- name: "Setup | Run RKE2 install script"
  become: true
  ansible.builtin.command: |
    /tmp/rke2-install.sh
  args:
    creates: "/usr/local/bin/rke2"
  environment:
    INSTALL_RKE2_CHANNEL: "{{ rancher_rke2_channel }}"
    INSTALL_RKE2_TYPE: "{{ rancher_rke2_type }}"

- name: "Setup | Start first RKE2 server"
  become: true
  ansible.builtin.service:
    name: rke2-server
    state: started
    enabled: true
  when: rancher_rke2_server_ip is undefined

- name: "Setup | Wait for RKE2 server to be ready on port 9345"
  become: true
  ansible.builtin.wait_for:
    port: 9345
    state: started
    timeout: 300
  when: rancher_rke2_server_ip is undefined

- name: "Setup | Start other RKE2 servers"
  become: true
  ansible.builtin.service:
    name: rke2-server
    state: started
    enabled: true
  when: rancher_rke2_server_ip is defined
  retries: 5
  delay: 10
  register: rke2_start
  until: rke2_start is succeeded

- name: "Server | Ensure .kube directory exists"
  become: true
  ansible.builtin.file:
    path: ~{{ rancher_rke2_server_ansible_user }}/.kube
    state: directory
    owner: "{{ rancher_rke2_server_ansible_user }}"
    group: "{{ rancher_rke2_server_ansible_user }}"
    mode: '0700'

- name: Check if rke2.yaml exists
  become: true
  ansible.builtin.stat:
    path: /etc/rancher/rke2/rke2.yaml
  register: rke2_yaml

- name: "Server | Copy config file to user home directory"
  become: true
  ansible.builtin.copy:
    src: /etc/rancher/rke2/rke2.yaml
    dest: ~{{ rancher_rke2_server_ansible_user }}/.kube/config
    remote_src: true
    owner: "{{ rancher_rke2_server_ansible_user }}"
    mode: "u=rw,g=,o="
  when: rke2_yaml.stat.exists

- name: "Server | Create rke2 symlink"
  become: true
  ansible.builtin.file:
    src: /opt/rke2/bin/rke2
    dest: /usr/local/bin/rke2
    state: link
    force: true

- name: "Server | Create kubectl symlink"
  become: true
  ansible.builtin.file:
    src: /var/lib/rancher/rke2/bin/kubectl
    dest: /usr/local/bin/kubectl
    state: link
    force: true

- name: "Server | Create crictl symlink"
  become: true
  ansible.builtin.file:
    src: /var/lib/rancher/rke2/bin/crictl
    dest: /usr/local/bin/crictl
    state: link
    force: true

...
